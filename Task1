Create a policy.json using below
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": [
        "ec2:Start*",
        "ec2:Stop*"
      ],
      "Resource": "*"
    }
  ]
}

Create a policy

aws iam create-policy --policy-name task1-policy --policy-document file:\\policy.json

create a trust_policy.json using below

{
  "Version": "2012-10-17",
  "Statement": [
                {
                    "Effect": "Allow",
                    "Principal": {
                        "Service": "lambda.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                }
  ]
}

create a role

aws iam create-role --role-name task1_role --assume-role-policy-document file://trust-poolicy.json
 
Attach policy to role 
 
aws iam attach-role-policy --role-name task1_role --policy-arn arn:aws:iam::385418799180:policy/task1-policy
 
create a start.py file
 
import boto3
region = 'us-west-2'
instances = ['i-07828833fdb86887c']
ec2 = boto3.client('ec2', region_name=region)

def lambda_handler(event, context):
    ec2.start_instances(InstanceIds=instances)
    print('started your instances: ' + str(instances))

Create a start-function 

aws lambda create-function --function-name start-function --zip-file fileb://function.zip --handler start.py --runtime Python3.7 --role arn:aws:iam::385418799180:role/task1_role

create a stop.py file

import boto3
region = 'us-west-2'
instances = ['i-07828833fdb86887c']
ec2 = boto3.client('ec2', region_name=region)

def lambda_handler(event, context):
    ec2.stop_instances(InstanceIds=instances)
    print('stopped your instances: ' + str(instances))
	
create a stop-function 

aws lambda create-function --function-name stop-function --zip-file fileb://function.zip --handler stop.py --runtime Python3.7 --role arn:aws:iam::385418799180:role/task1_role


create a start1 rule 

aws events put-rule --schedule-expression "cron(0 05 * * ? *)" --name start1

aws lambda add-permission --function-name start-function --statement-id my-scheduled-event1 --action 'lambda:InvokeFunction' --principal events.amazonaws.com --source-arn arn:aws:events:us-west-2:385418799180:rule/start1

[
  {
    "Id": "1", 
    "Arn": "arn:aws:lambda:us-west-2:385418799180:function:start-function"
  }
]


aws events put-targets --rule start1 --targets file://functionstart.json

create a stop rule
aws events put-rule --schedule-expression "cron(0 22 * * ? *)" --name stop1

aws lambda add-permission --function-name start-function --statement-id my-scheduled-event1 --action 'lambda:InvokeFunction' --principal events.amazonaws.com --source-arn arn:aws:events:us-west-2:385418799180:rule/stop1

[
  {
    "Id": "1", 
    "Arn": "arn:aws:lambda:us-west-2:385418799180:function:stop-function"
  }
]

aws events put-targets --rule start1 --targets file://functionstop.json